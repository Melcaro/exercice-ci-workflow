version: 2.1
jobs:
  Client-Test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - client-yarn-packages-{{ checksum "client/yarn.lock" }}
      - run:
          command: cd client && yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: client-yarn-packages-{{ checksum "client/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          command: cd client && yarn test
  Server-Test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          command: curl -o- -L https://yarnpkg.com/install.sh | bash
      - restore_cache:
          name: Restore Yarn Package Cache in Server
          keys:
            - server-yarn-packages-{{ checksum "server/yarn.lock" }}
      - run:
          command: cd server && yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache in Server
          key: server-yarn-packages-{{ checksum "server/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          command: cd server && yarn test
  Deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: push on Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master

workflows:
  version: 2
  Example_Workflow:
    jobs:
      - Client-Test
      - Server-Test
      - Validation:
        type: approval
        requires:
          - Client-Test
          - Server-Test
      - Deploy
